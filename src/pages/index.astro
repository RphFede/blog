---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import ContentSheet from '../components/ContentSheet.astro';
import Welcome from '../layouts/Welcome.astro';
import { Image } from 'astro:assets';
// 1. Obtiene todos los posts de la colección 'posts'
const allPosts = await getCollection('posts');
// Opcional: ordenarlos por fecha y tomar solo los 3 más recientes
const sortedPosts = allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const recentPosts = sortedPosts.slice(0, 3);

// Función adaptativa para extraer fragmento según longitud de descripción
function getResponsiveExcerpt(content: string, description: string): string {
// Estimar líneas de descripción (aprox. 70 chars por línea en desktop)
const descriptionLines = Math.ceil(description.length / 70); // 70 caracteres = 1 linea de texto imaginaria
  
// Ajustar longitud base según descripción - más agresivo para aprovechar espacio
let baseLength;
if (descriptionLines === 1) {
  baseLength = 360;
} else {
  baseLength = 280;
}

// Remover el frontmatter y las imágenes del inicio
const cleanContent = content
  .replace(/^---[\s\S]*?---/, '') // Remover frontmatter
  .replace(/!\[.*?\]\(.*?\)/g, '') // Remover imágenes
  .replace(/#{1,6}\s+/g, '') // Remover headers
  .replace(/\*\*(.*?)\*\*/g, '$1') // Remover bold
  .replace(/\*(.*?)\*/g, '$1') // Remover italic
  .replace(/\[([^\]]+)\]\([^\)]+\)/g, '$1') // Remover links
  .trim();

// Si el contenido es menor que la longitud base, devolver todo el contenido disponible
if (cleanContent.length <= baseLength) {
  return cleanContent;
}

return cleanContent.substring(0, baseLength).trim() + '...';
}
---

<BaseLayout>
	<ContentSheet>

    <Welcome />  
    
    <h3>Últimas entradas</h3>

		<div class="posts-grid">
      {
        recentPosts.map(async (post) => {
          const excerpt = getResponsiveExcerpt(post.body, post.data.description);          
          return (
            <article class="post-card">
              <a href={`/blog/${post.slug}/`} class="post-card-link">
                <div class="post-layout">
                  {post.data.image && (
                    <div class="post-thumbnail">
                      <Image
                        src={post.data.image.url}
                        alt={post.data.image.alt}
                        width={400}
                        height={400}
                        loading="lazy"
                        quality={90}
                      />
                    </div>
                  )}
                  <div class="post-content">
                    <h2 class="post-title">{post.data.title}</h2>
                    <p class="post-description">{post.data.description}</p>
                    <p class="post-excerpt">{excerpt}</p>
                    <span class="read-more-btn">Leer más</span>
                  </div>
                </div>
                <div class="post-date-footer">
                   <small>{post.data.pubDate.toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}</small>
                 </div>
              </a>
            </article>
          )
        })
      }
    </div>
	</ContentSheet>
</BaseLayout>

<style>
h3 {
  font-size: 1.5rem;
  font-weight: 600;
  color: #1f2937;
  text-align: left;
  margin-top: 2rem;
  margin-bottom: 2rem;
  line-height: 1.7;
}

.posts-grid {
  display: grid;
  gap: 2rem;
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.post-card {
  background: #fdfefd;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  border: 1px solid #f1f5f9;
}

.post-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.post-layout {
  display: flex;
  align-items: flex-start;
  gap: 1.5rem;
  padding: 1.5rem 1.5rem 0.5rem 1.5rem;
}

.post-thumbnail {
  flex-shrink: 0;
  width: 200px;
  height: 200px;
  overflow: hidden;
  margin-top: -8px;
}

.post-thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.post-content {
  flex: 1;
  display: grid;
  grid-template-rows: auto auto 1fr auto;
  min-height: 180px;
}

.post-card-link {
  display: block;
  text-decoration: none;
  color: inherit;
}

.post-title {
  margin: 0 0 0.5rem 0;
  font-size: 1.1rem;
  font-weight: 600;
  line-height: 1.3;
  color: #2d3748;
}

.post-description {
  color: #4a5568;
  font-size: 0.85rem;
  margin: 0 0 0.5rem 0;
  font-weight: 500;
}

.post-excerpt {
  color: #718096;
  font-size: 0.8rem;
  line-height: 1.4;
  margin: 0 0 0.5rem 0;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
}

.read-more-btn {
  color: #4299e1;
  font-size: 0.75rem;
  font-weight: 600;
  text-decoration: none;
  transition: color 0.3s ease;
  align-self: flex-start;
  margin-top: 0.2rem;
  margin-bottom: 0.2rem;
}

.read-more-btn:hover {
  color: #2d3748;
}

.post-date-footer {
  margin: 0;
  padding: 1rem 0;
  margin-left: 240px; /* Padding layout (24px) + Ancho de imagen (200px) + gap (16px) */
  margin-right: 1.5rem;
  border-top: 1px solid #e2e8f0;
  text-align: right;
}

.post-date-footer small {
  font-size: 0.8rem;
  font-style: italic;
  color: #718096;
}

/* Responsive design */
@media (min-width: 768px) {
  .posts-grid {
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  }
}

@media (max-width: 768px) {
  .post-content {
    min-height: 160px;
  }
  .post-excerpt {
    -webkit-line-clamp: 2;
  }
}

@media (max-width: 480px) {
  .post-layout {
    flex-direction: column;
    padding: 1rem;
  }
    
  .post-thumbnail {
    width: 100%;
    height: 180px;
    margin-top: 0;
  }
  
  .post-content {
    min-height: auto;
  }
    
  .post-excerpt {
    -webkit-line-clamp: 4;
  }
  
  .post-date-footer {
    margin-left: 1rem;
    margin-right: 1rem;
    padding: 1rem 0;
    text-align: center;
  }
}
</style>
