---
// asi se importan los archivos css LOCALES
import '../styles/global.css'; 
import '../styles/transition-examples.css';
// Router para las transiciones
import { ClientRouter } from 'astro:transitions';
import { fade } from 'astro:transitions';
// Componentes compartidos entre las paginas
import Logo from '../components/Logo.astro';
import Navigation from '../components/Navigation.astro';
import ContentSheet from '../components/ContentSheet.astro';
import Footer from '../components/Footer.astro';
// Props opcionales para el layout (Props = Propiedades)
export interface Props {
	title?: string; // El "?" indica que es opcional, por defecto es "Reflexiones de sill√≥n"
	description?: string;
}
const { title = "Reflexiones de sill√≥n",
		description = "Espacio personal donde comparto mis reflexiones como estudiante sobre filosof√≠a"
} = Astro.props;
---

<html lang="es">

	<head> <!-- info no visible de la web -->
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/svg/phi.svg" /> <!-- icono de la web -->
		<meta name="viewport" content="width=device-width" />
		<meta name="description" content={description} />
		<meta name="generator" content={Astro.generator} /> <!-- generador de la web -->
		<!-- Precarga de fuentes para evitar problemas con View Transitions -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link rel="preload" as="style" href="https://fonts.googleapis.com/css2?family=Exo+2:ital,wght@0,100..900;1,100..900&display=swap">
		<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Exo+2:ital,wght@0,100..900;1,100..900&display=swap" media="print" onload="this.media='all'">
		<title>{title}</title> 
		<ClientRouter transition:animate={fade({ duration: 0.2 })} /> <!-- router para las transiciones -->
	</head>	

	<body> <!-- contenido visible de la web -->
		<header> <!-- cabecera de la web (suele compartirse entre las paginas) -->
			<Logo /> <!-- componente de logo -->
			<Navigation /> <!-- componente de navegacion -->
		</header>

		<main>
			<slot />
		</main>

		<Footer /> <!-- componente de pie de pagina -->

		<!-- MEJORES PR√ÅCTICAS PARA SCRIPTS CON VIEW TRANSITIONS -->
		<script>
			// ‚úÖ CORRECTO: Tu ubicaci√≥n actual est√° perfecta
			// Los scripts en BaseLayout se ejecutan una vez y persisten
			
			// Funci√≥n para inicializar scripts que necesitan reiniciarse
			function initializePageScripts() {
				console.log("üîÑ Inicializando scripts de p√°gina");
				
				// Aqu√≠ puedes agregar:
				// - Reinicializaci√≥n de librer√≠as de terceros
				// - Event listeners espec√≠ficos de p√°gina
				// - Animaciones que deben reiniciarse
				
				// Ejemplo: reinicializar tooltips, modales, etc.
				// initTooltips();
				// initModals();
				
				// Asegurar que la fuente est√© cargada despu√©s de cada transici√≥n
				ensureFontLoaded();
			}
			
			// Funci√≥n para asegurar que la fuente est√© cargada
			function ensureFontLoaded() {
				// Verificar si ya existe el enlace de la fuente
				const fontLink = document.querySelector('link[href*="fonts.googleapis.com/css2?family=Exo+2"]');
				
				// Si no existe, recrearlo
				if (!fontLink || fontLink.getAttribute('media') !== 'all') {
					console.log("üî§ Asegurando carga de fuente Exo 2");
					
					// Asegurar que los enlaces de preconexi√≥n existan
					if (!document.querySelector('link[href="https://fonts.googleapis.com"]')) {
						const preconnectGoogle = document.createElement('link');
						preconnectGoogle.rel = 'preconnect';
						preconnectGoogle.href = 'https://fonts.googleapis.com';
						document.head.appendChild(preconnectGoogle);
					}
					
					if (!document.querySelector('link[href="https://fonts.gstatic.com"]')) {
						const preconnectGstatic = document.createElement('link');
						preconnectGstatic.rel = 'preconnect';
						preconnectGstatic.href = 'https://fonts.gstatic.com';
						preconnectGstatic.setAttribute('crossorigin', '');
						document.head.appendChild(preconnectGstatic);
					}
					
					// Asegurar que el enlace de la fuente exista y est√© activo
					const fontUrl = 'https://fonts.googleapis.com/css2?family=Exo+2:ital,wght@0,100..900;1,100..900&display=swap';
					
					if (fontLink) {
						// Si existe pero no est√° activo, activarlo
						fontLink.setAttribute('media', 'all');
					} else {
						// Si no existe, crear nuevo enlace
						const newFontLink = document.createElement('link');
						newFontLink.rel = 'stylesheet';
						newFontLink.href = fontUrl;
						newFontLink.setAttribute('media', 'all');
						document.head.appendChild(newFontLink);
					}
				}
			}
			
			// Ejecutar en la carga inicial
			initializePageScripts();
			
			// ‚úÖ EVENTO PRINCIPAL: Se ejecuta despu√©s de cada transici√≥n
			document.addEventListener('astro:after-swap', () => {
				console.log("‚ú® P√°gina cambiada con View Transitions!");
				initializePageScripts();
			});
			
			// ‚úÖ EVENTOS ADICIONALES √öTILES:
			
			// Antes de preparar la nueva p√°gina
			document.addEventListener('astro:before-preparation', (event) => {
				console.log("üîÑ Preparando nueva p√°gina...");
				// Aqu√≠ puedes mostrar un loader o limpiar estados
			});
			
			// Despu√©s de preparar, antes de intercambiar
			document.addEventListener('astro:after-preparation', () => {
				console.log("‚úÖ Nueva p√°gina preparada");
			});
			
			// Antes del intercambio visual
			document.addEventListener('astro:before-swap', () => {
				console.log("üîÑ Iniciando transici√≥n visual...");
				// √öltimo momento para limpiar o preparar la transici√≥n
			});
			
			// ‚úÖ EJEMPLO: Deshabilitar transiciones condicionalmente
			/*
			document.addEventListener('astro:before-preparation', (event) => {
				// Ejemplo: deshabilitar transiciones para enlaces externos
				if (event.to.pathname.startsWith('/admin')) {
					event.preventDefault(); // Cancela la transici√≥n
				}
			});
			*/
			
			// ‚úÖ EJEMPLO: Transiciones personalizadas por ruta
			/*
			document.addEventListener('astro:before-preparation', (event) => {
				// Agregar clases CSS espec√≠ficas seg√∫n la ruta
				if (event.to.pathname.includes('/blog/')) {
					document.documentElement.classList.add('blog-transition');
				} else {
					document.documentElement.classList.remove('blog-transition');
				}
			});
			*/
		</script>
		
		<!-- EJEMPLO: Script espec√≠fico para desarrollo/debug -->
		<script>
			// Solo en desarrollo - puedes remover esto en producci√≥n
			if (import.meta.env.DEV) {
				console.log("üöÄ Modo desarrollo: View Transitions activas");
				
				// Mostrar informaci√≥n de transiciones en consola
				let transitionCount = 0;
				document.addEventListener('astro:after-swap', () => {
					transitionCount++;
					console.log(`üìä Transici√≥n #${transitionCount} completada`);
				});
			}
		</script>
	</body>
</html>